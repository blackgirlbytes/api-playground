{
  "info": {
    "name": "Kid-Friendly API Collection üêïü§£üìö",
    "description": "A fun collection of safe, educational APIs perfect for kids to learn about making API requests!",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üêï Dog Facts API",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://dogapi.dog/api/v2/facts",
          "protocol": "https",
          "host": [
            "dogapi",
            "dog"
          ],
          "path": [
            "api",
            "v2",
            "facts"
          ]
        },
        "description": "Get amazing facts about dogs! üêï\n\n**What this API does:**\n- Returns fun and educational facts about our furry friends\n- Perfect for learning about different dog breeds and behaviors\n- Each fact is kid-friendly and educational\n\n**What kids can learn:**\n- Interesting facts about animals\n- How APIs return data in JSON format\n- Making simple GET requests\n- Reading and understanding API responses\n\n**Expected Response:**\n```json\n{\n  \"data\": [\n    {\n      \"id\": \"123\",\n      \"type\": \"fact\",\n      \"attributes\": {\n        \"body\": \"Dogs have three eyelids! The third one is called the 'haw' and keeps the eye moist and protected.\"\n      }\n    }\n  ]\n}\n```"
      },
      "response": [
        {
          "name": "Sample Dog Fact Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://dogapi.dog/api/v2/facts",
              "protocol": "https",
              "host": [
                "dogapi",
                "dog"
              ],
              "path": [
                "api",
                "v2",
                "facts"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"data\": [\n    {\n      \"id\": \"1234\",\n      \"type\": \"fact\",\n      \"attributes\": {\n        \"body\": \"A dog's sense of smell is 10,000 to 100,000 times stronger than humans!\"\n      }\n    }\n  ]\n}"
        }
      ]
    },
    {
      "name": "üòÇ Dad Jokes API",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://icanhazdadjoke.com/",
          "protocol": "https",
          "host": [
            "icanhazdadjoke",
            "com"
          ],
          "path": [
            ""
          ]
        },
        "description": "Get hilarious dad jokes that will make you groan and laugh! üòÇ\n\n**What this API does:**\n- Returns clean, family-friendly dad jokes\n- Perfect for sharing with friends and family\n- Always safe and appropriate for kids\n\n**What kids can learn:**\n- How to make API requests with custom headers\n- Understanding different response formats (JSON vs plain text)\n- The importance of the 'Accept' header in API requests\n- How humor can be shared through technology!\n\n**Expected Response:**\n```json\n{\n  \"id\": \"R7UfaahVfFd\",\n  \"joke\": \"Why don't scientists trust atoms? Because they make up everything!\",\n  \"status\": 200\n}\n```"
      },
      "response": [
        {
          "name": "Sample Dad Joke Response",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "https://icanhazdadjoke.com/",
              "protocol": "https",
              "host": [
                "icanhazdadjoke",
                "com"
              ],
              "path": [
                ""
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"id\": \"R7UfaahVfFd\",\n  \"joke\": \"What do you call a fake noodle? An Impasta!\",\n  \"status\": 200\n}"
        }
      ]
    },
    {
      "name": "üåç Fun Facts API",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://uselessfacts.jsph.pl/random.json?language=en",
          "protocol": "https",
          "host": [
            "uselessfacts",
            "jsph",
            "pl"
          ],
          "path": [
            "random.json"
          ],
          "query": [
            {
              "key": "language",
              "value": "en",
              "description": "Get facts in English"
            }
          ]
        },
        "description": "Discover amazing random facts about our world! üåç\n\n**What this API does:**\n- Returns interesting and educational random facts\n- Facts are carefully curated to be appropriate and fascinating\n- Great for learning something new every day!\n\n**What kids can learn:**\n- How to use query parameters in API requests\n- Discovering interesting facts about science, history, and nature\n- Understanding how APIs can provide educational content\n- The structure of JSON responses with nested data\n\n**Expected Response:**\n```json\n{\n  \"id\": \"12345\",\n  \"text\": \"Honey never spoils! Archaeologists have found pots of honey in ancient Egyptian tombs that are over 3,000 years old and still perfectly edible.\",\n  \"source\": \"djtech.net\",\n  \"source_url\": \"http://www.djtech.net/humor/useless_facts.htm\",\n  \"language\": \"en\",\n  \"permalink\": \"https://uselessfacts.jsph.pl/12345\"\n}\n```"
      },
      "response": [
        {
          "name": "Sample Fun Fact Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://uselessfacts.jsph.pl/random.json?language=en",
              "protocol": "https",
              "host": [
                "uselessfacts",
                "jsph",
                "pl"
              ],
              "path": [
                "random.json"
              ],
              "query": [
                {
                  "key": "language",
                  "value": "en"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"id\": \"98765\",\n  \"text\": \"Octopuses have three hearts and blue blood!\",\n  \"source\": \"djtech.net\",\n  \"source_url\": \"http://www.djtech.net/humor/useless_facts.htm\",\n  \"language\": \"en\",\n  \"permalink\": \"https://uselessfacts.jsph.pl/98765\"\n}"
        }
      ]
    },
    {
      "name": "üé≤ Random Number Generator (POST Example)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"min\": 1,\n  \"max\": 100,\n  \"count\": 5\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "https://www.random.org/integers/?num=5&min=1&max=100&col=1&base=10&format=plain&rnd=new",
          "protocol": "https",
          "host": [
            "www",
            "random",
            "org"
          ],
          "path": [
            "integers",
            ""
          ],
          "query": [
            {
              "key": "num",
              "value": "5",
              "description": "Number of integers to generate"
            },
            {
              "key": "min",
              "value": "1",
              "description": "Minimum value"
            },
            {
              "key": "max",
              "value": "100",
              "description": "Maximum value"
            },
            {
              "key": "col",
              "value": "1",
              "description": "Number of columns"
            },
            {
              "key": "base",
              "value": "10",
              "description": "Number base (decimal)"
            },
            {
              "key": "format",
              "value": "plain",
              "description": "Output format"
            },
            {
              "key": "rnd",
              "value": "new",
              "description": "Use new randomization"
            }
          ]
        },
        "description": "Generate truly random numbers for games and activities! üé≤\n\n**What this API does:**\n- Creates genuinely random numbers using atmospheric noise\n- Perfect for games, decision-making, or math activities\n- More random than computer-generated numbers!\n\n**What kids can learn:**\n- How to send data in a POST request\n- Understanding query parameters vs request body\n- The difference between true randomness and computer randomness\n- How APIs can be used for interactive applications\n- Math concepts like ranges and probability\n\n**Note:** This example shows query parameters, but you could also use POST with JSON body for more complex requests.\n\n**Expected Response:**\n```\n42\n17\n89\n3\n76\n```"
      },
      "response": [
        {
          "name": "Sample Random Numbers Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://www.random.org/integers/?num=5&min=1&max=100&col=1&base=10&format=plain&rnd=new",
              "protocol": "https",
              "host": [
                "www",
                "random",
                "org"
              ],
              "path": [
                "integers",
                ""
              ],
              "query": [
                {
                  "key": "num",
                  "value": "5"
                },
                {
                  "key": "min",
                  "value": "1"
                },
                {
                  "key": "max",
                  "value": "100"
                },
                {
                  "key": "col",
                  "value": "1"
                },
                {
                  "key": "base",
                  "value": "10"
                },
                {
                  "key": "format",
                  "value": "plain"
                },
                {
                  "key": "rnd",
                  "value": "new"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": "42\n17\n89\n3\n76"
        }
      ]
    },
    {
      "name": "üê± Cat Facts API",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://catfact.ninja/fact",
          "protocol": "https",
          "host": [
            "catfact",
            "ninja"
          ],
          "path": [
            "fact"
          ]
        },
        "description": "Learn fascinating facts about our feline friends! üê±\n\n**What this API does:**\n- Provides interesting and educational facts about cats\n- Perfect for cat lovers and animal enthusiasts\n- All facts are kid-friendly and educational\n\n**What kids can learn:**\n- More about our pet companions\n- Simple API request structure\n- JSON response parsing\n- Animal behavior and biology basics\n\n**Expected Response:**\n```json\n{\n  \"fact\": \"Cats can rotate their ears 180 degrees.\",\n  \"length\": 38\n}\n```"
      },
      "response": [
        {
          "name": "Sample Cat Fact Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://catfact.ninja/fact",
              "protocol": "https",
              "host": [
                "catfact",
                "ninja"
              ],
              "path": [
                "fact"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"fact\": \"Cats sleep 70% of their lives, which is 13-16 hours a day!\",\n  \"length\": 58\n}"
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// This script runs before each request",
          "console.log('üöÄ Making an API request! Let\\'s learn something new!');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// This script runs after each request",
          "pm.test('Response status is 200', function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "console.log('‚úÖ API request completed successfully!');"
        ]
      }
    }
  ]
}
